{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    static STATUS = {\n        idle: \"idle\",\n        playing: \"playing\",\n        win: \"win\",\n        lose: \"lose\"\n    };\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.status = $a5fd07fa01589658$var$Game.STATUS.idle;\n        this.initialState = initialState;\n        this.state = initialState.map((row)=>[\n                ...row\n            ]);\n        this.score = 0;\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.state;\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        this.status = $a5fd07fa01589658$var$Game.STATUS.playing;\n        this.getRandomBlock();\n        this.getRandomBlock();\n    }\n    restart() {\n        this.status = $a5fd07fa01589658$var$Game.STATUS.idle;\n        this.state = this.initialState.map((row)=>[\n                ...row\n            ]);\n        this.score = 0;\n    }\n    getRandomBlock() {\n        const emptyBlock = this.state.reduce((acc, row, rowIndex)=>{\n            row.forEach((cell, colIndex)=>{\n                if (cell === 0) acc.push([\n                    rowIndex,\n                    colIndex\n                ]);\n            });\n            return acc;\n        }, []);\n        if (emptyBlock.length > 0) {\n            const [randomR, randomC] = emptyBlock[Math.floor(Math.random() * emptyBlock.length)];\n            this.state[randomR][randomC] = Math.random() < 0.9 ? 2 : 4;\n        }\n    }\n    moveLeft() {\n        this.move((row)=>row, (row, rowIndex)=>this.state[rowIndex] = row);\n    }\n    moveRight() {\n        this.move((row)=>row.reverse(), (row, rowIndex)=>this.state[rowIndex] = row.reverse());\n    }\n    moveUp() {\n        if (this.status !== $a5fd07fa01589658$var$Game.STATUS.playing) return;\n        this.move((_, colIndex)=>this.getColumn(colIndex), (col, colIndex)=>this.setColumn(col, colIndex));\n    }\n    moveDown() {\n        if (this.status !== $a5fd07fa01589658$var$Game.STATUS.playing) return;\n        this.move((_, colIndex)=>this.getColumn(colIndex).reverse(), (col, colIndex)=>this.setColumn(col.reverse(), colIndex));\n    }\n    move(getRowFunc, setRowFunc) {\n        if (this.status !== $a5fd07fa01589658$var$Game.STATUS.playing) return;\n        let moved = false;\n        for(let i = 0; i < 4; i++){\n            const row = getRowFunc(this.state[i], i);\n            const [shiftedRow] = this.combineAndShift(row);\n            if (shiftedRow.toString() !== row.toString()) moved = true;\n            setRowFunc(shiftedRow, i);\n        }\n        if (moved) {\n            this.getRandomBlock();\n            this.checkGameOverOrWin();\n        }\n    }\n    getColumn(colIndex) {\n        return this.state.map((row)=>row[colIndex]);\n    }\n    setColumn(col, colIndex) {\n        col.forEach((value, rowIndex)=>{\n            this.state[rowIndex][colIndex] = value;\n        });\n    }\n    combineAndShift(row) {\n        let newRow = row.filter((val)=>val !== 0);\n        let combined = false;\n        for(let i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n            newRow[i] *= 2;\n            this.score += newRow[i];\n            newRow[i + 1] = 0;\n            combined = true;\n        }\n        newRow = newRow.filter((val)=>val !== 0);\n        while(newRow.length < 4)newRow.push(0);\n        return [\n            newRow,\n            combined\n        ];\n    }\n    checkGameOverOrWin() {\n        if (this.state.flat().includes(2048)) {\n            this.status = $a5fd07fa01589658$var$Game.STATUS.win;\n            return;\n        }\n        if (!this.canMove()) this.status = $a5fd07fa01589658$var$Game.STATUS.lose;\n    }\n    canMove() {\n        for(let row = 0; row < 4; row++)for(let col = 0; col < 4; col++){\n            if (this.state[row][col] === 0) return true;\n            if (col < 3 && this.state[row][col] === this.state[row][col + 1]) return true;\n            if (row < 3 && this.state[row][col] === this.state[row + 1][col]) return true;\n        }\n        return false;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$startButton = document.querySelector(\".start\");\nconst $09e991522ca7e64e$var$score = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$field = document.querySelector(\".game-field\");\nconst $09e991522ca7e64e$var$startMessage = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$loseMessage = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$winMessage = document.querySelector(\".message-win\");\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", ()=>{\n    const isStarting = $09e991522ca7e64e$var$startButton.classList.contains(\"start\");\n    $09e991522ca7e64e$var$game[isStarting ? \"start\" : \"restart\"]();\n    $09e991522ca7e64e$var$startButton.classList.toggle(\"start\");\n    $09e991522ca7e64e$var$startButton.classList.toggle(\"restart\");\n    $09e991522ca7e64e$var$startButton.textContent = isStarting ? \"Restart\" : \"Start\";\n    $09e991522ca7e64e$var$hideMessages();\n    $09e991522ca7e64e$var$updateGameState();\n});\ndocument.addEventListener(\"keydown\", (e)=>{\n    const moves = {\n        ArrowRight: \"moveRight\",\n        ArrowLeft: \"moveLeft\",\n        ArrowUp: \"moveUp\",\n        ArrowDown: \"moveDown\"\n    };\n    if (moves[e.key]) {\n        $09e991522ca7e64e$var$game[moves[e.key]]();\n        $09e991522ca7e64e$var$updateGameState();\n    }\n});\nfunction $09e991522ca7e64e$var$updateGameState() {\n    $09e991522ca7e64e$var$updateField();\n    $09e991522ca7e64e$var$updateScore();\n    $09e991522ca7e64e$var$checkGameStatus();\n}\nfunction $09e991522ca7e64e$var$updateScore() {\n    $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$game.getScore();\n}\nfunction $09e991522ca7e64e$var$checkGameStatus() {\n    $09e991522ca7e64e$var$hideMessages();\n    const gameStatus = $09e991522ca7e64e$var$game.getStatus();\n    if (gameStatus === $a5fd07fa01589658$exports.STATUS.win) $09e991522ca7e64e$var$winMessage.classList.remove(\"hidden\");\n    else if (gameStatus === $a5fd07fa01589658$exports.STATUS.lose) $09e991522ca7e64e$var$loseMessage.classList.remove(\"hidden\");\n}\nfunction $09e991522ca7e64e$var$hideMessages() {\n    $09e991522ca7e64e$var$startMessage.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$winMessage.classList.add(\"hidden\");\n}\nfunction $09e991522ca7e64e$var$updateField() {\n    $09e991522ca7e64e$var$field.innerHTML = \"\";\n    $09e991522ca7e64e$var$game.getState().forEach((row)=>{\n        const tr = document.createElement(\"tr\");\n        row.forEach((value)=>{\n            const td = document.createElement(\"td\");\n            td.textContent = value !== 0 ? value : \"\";\n            td.className = `field-cell${value ? ` field-cell--${value}` : \"\"}`;\n            tr.appendChild(td);\n        });\n        $09e991522ca7e64e$var$field.appendChild(tr);\n    });\n}\n// for mobile\nlet $09e991522ca7e64e$var$touchStartX = 0;\nlet $09e991522ca7e64e$var$touchStartY = 0;\ndocument.addEventListener(\"touchstart\", (e)=>{\n    $09e991522ca7e64e$var$touchStartX = e.touches[0].clientX;\n    $09e991522ca7e64e$var$touchStartY = e.touches[0].clientY;\n});\ndocument.addEventListener(\"touchend\", (e)=>{\n    const touchEndX = e.changedTouches[0].clientX;\n    const touchEndY = e.changedTouches[0].clientY;\n    const diffX = touchEndX - $09e991522ca7e64e$var$touchStartX;\n    const diffY = touchEndY - $09e991522ca7e64e$var$touchStartY;\n    // Визначаємо напрямок свайпу\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n        // Горизонтальний свайп\n        if (diffX > 0) $09e991522ca7e64e$var$game.moveRight();\n        else $09e991522ca7e64e$var$game.moveLeft();\n    } else // Вертикальний свайп\n    if (diffY > 0) $09e991522ca7e64e$var$game.moveDown();\n    else $09e991522ca7e64e$var$game.moveUp();\n    $09e991522ca7e64e$var$updateGameState();\n});\n// Initial setup\n$09e991522ca7e64e$var$updateGameState();\n\n\n//# sourceMappingURL=index.e6d02754.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\nconst startButton = document.querySelector('.start');\nconst score = document.querySelector('.game-score');\nconst field = document.querySelector('.game-field');\n\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\n\nstartButton.addEventListener('click', () => {\n  const isStarting = startButton.classList.contains('start');\n\n  game[isStarting ? 'start' : 'restart']();\n\n  startButton.classList.toggle('start');\n  startButton.classList.toggle('restart');\n  startButton.textContent = isStarting ? 'Restart' : 'Start';\n\n  hideMessages();\n  updateGameState();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  const moves = {\n    ArrowRight: 'moveRight',\n    ArrowLeft: 'moveLeft',\n    ArrowUp: 'moveUp',\n    ArrowDown: 'moveDown',\n  };\n\n  if (moves[e.key]) {\n    game[moves[e.key]]();\n    updateGameState();\n  }\n});\n\nfunction updateGameState() {\n  updateField();\n  updateScore();\n  checkGameStatus();\n}\n\nfunction updateScore() {\n  score.textContent = game.getScore();\n}\n\nfunction checkGameStatus() {\n  hideMessages();\n\n  const gameStatus = game.getStatus();\n\n  if (gameStatus === Game.STATUS.win) {\n    winMessage.classList.remove('hidden');\n  } else if (gameStatus === Game.STATUS.lose) {\n    loseMessage.classList.remove('hidden');\n  }\n}\n\nfunction hideMessages() {\n  startMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n}\n\nfunction updateField() {\n  field.innerHTML = '';\n\n  game.getState().forEach((row) => {\n    const tr = document.createElement('tr');\n\n    row.forEach((value) => {\n      const td = document.createElement('td');\n\n      td.textContent = value !== 0 ? value : '';\n      td.className = `field-cell${value ? ` field-cell--${value}` : ''}`;\n      tr.appendChild(td);\n    });\n    field.appendChild(tr);\n  });\n}\n\n// for mobile\nlet touchStartX = 0;\nlet touchStartY = 0;\n\ndocument.addEventListener('touchstart', (e) => {\n  touchStartX = e.touches[0].clientX;\n  touchStartY = e.touches[0].clientY;\n});\n\ndocument.addEventListener('touchend', (e) => {\n  const touchEndX = e.changedTouches[0].clientX;\n  const touchEndY = e.changedTouches[0].clientY;\n\n  const diffX = touchEndX - touchStartX;\n  const diffY = touchEndY - touchStartY;\n\n  // Визначаємо напрямок свайпу\n  if (Math.abs(diffX) > Math.abs(diffY)) {\n    // Горизонтальний свайп\n    if (diffX > 0) {\n      game.moveRight();\n    } else {\n      game.moveLeft();\n    }\n  } else {\n    // Вертикальний свайп\n    if (diffY > 0) {\n      game.moveDown();\n    } else {\n      game.moveUp();\n    }\n  }\n\n  updateGameState();\n});\n\n// Initial setup\nupdateGameState();\n","'use strict';\n\nclass Game {\n  static STATUS = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.status = Game.STATUS.idle;\n    this.initialState = initialState;\n    this.state = initialState.map((row) => [...row]);\n    this.score = 0;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.STATUS.playing;\n    this.getRandomBlock();\n    this.getRandomBlock();\n  }\n\n  restart() {\n    this.status = Game.STATUS.idle;\n    this.state = this.initialState.map((row) => [...row]);\n    this.score = 0;\n  }\n\n  getRandomBlock() {\n    const emptyBlock = this.state.reduce((acc, row, rowIndex) => {\n      row.forEach((cell, colIndex) => {\n        if (cell === 0) {\n          acc.push([rowIndex, colIndex]);\n        }\n      });\n\n      return acc;\n    }, []);\n\n    if (emptyBlock.length > 0) {\n      const [randomR, randomC] =\n        emptyBlock[Math.floor(Math.random() * emptyBlock.length)];\n\n      this.state[randomR][randomC] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  moveLeft() {\n    this.move(\n      (row) => row,\n      (row, rowIndex) => (this.state[rowIndex] = row),\n    );\n  }\n\n  moveRight() {\n    this.move(\n      (row) => row.reverse(),\n      (row, rowIndex) => (this.state[rowIndex] = row.reverse()),\n    );\n  }\n\n  moveUp() {\n    if (this.status !== Game.STATUS.playing) {\n      return;\n    }\n\n    this.move(\n      (_, colIndex) => this.getColumn(colIndex),\n      (col, colIndex) => this.setColumn(col, colIndex),\n    );\n  }\n\n  moveDown() {\n    if (this.status !== Game.STATUS.playing) {\n      return;\n    }\n\n    this.move(\n      (_, colIndex) => this.getColumn(colIndex).reverse(),\n      (col, colIndex) => this.setColumn(col.reverse(), colIndex),\n    );\n  }\n\n  move(getRowFunc, setRowFunc) {\n    if (this.status !== Game.STATUS.playing) {\n      return;\n    }\n\n    let moved = false;\n\n    for (let i = 0; i < 4; i++) {\n      const row = getRowFunc(this.state[i], i);\n      const [shiftedRow] = this.combineAndShift(row);\n\n      if (shiftedRow.toString() !== row.toString()) {\n        moved = true;\n      }\n      setRowFunc(shiftedRow, i);\n    }\n\n    if (moved) {\n      this.getRandomBlock();\n      this.checkGameOverOrWin();\n    }\n  }\n\n  getColumn(colIndex) {\n    return this.state.map((row) => row[colIndex]);\n  }\n\n  setColumn(col, colIndex) {\n    col.forEach((value, rowIndex) => {\n      this.state[rowIndex][colIndex] = value;\n    });\n  }\n\n  combineAndShift(row) {\n    let newRow = row.filter((val) => val !== 0);\n    let combined = false;\n\n    for (let i = 0; i < newRow.length - 1; i++) {\n      if (newRow[i] === newRow[i + 1]) {\n        newRow[i] *= 2;\n        this.score += newRow[i];\n        newRow[i + 1] = 0;\n        combined = true;\n      }\n    }\n\n    newRow = newRow.filter((val) => val !== 0);\n\n    while (newRow.length < 4) {\n      newRow.push(0);\n    }\n\n    return [newRow, combined];\n  }\n\n  checkGameOverOrWin() {\n    if (this.state.flat().includes(2048)) {\n      this.status = Game.STATUS.win;\n\n      return;\n    }\n\n    if (!this.canMove()) {\n      this.status = Game.STATUS.lose;\n    }\n  }\n\n  canMove() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 0) {\n          return true;\n        }\n\n        if (col < 3 && this.state[row][col] === this.state[row][col + 1]) {\n          return true;\n        }\n\n        if (row < 3 && this.state[row][col] === this.state[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$a5fd07fa01589658$exports","$a5fd07fa01589658$var$Game","STATUS","idle","playing","win","lose","constructor","initialState","status","state","map","row","score","getScore","getState","getStatus","start","getRandomBlock","restart","emptyBlock","reduce","acc","rowIndex","forEach","cell","colIndex","push","length","randomR","randomC","Math","floor","random","moveLeft","move","moveRight","reverse","moveUp","_","getColumn","col","setColumn","moveDown","getRowFunc","setRowFunc","moved","i","shiftedRow","combineAndShift","toString","checkGameOverOrWin","value","newRow","filter","val","combined","flat","includes","canMove","$09e991522ca7e64e$var$game","$09e991522ca7e64e$var$startButton","document","querySelector","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$field","$09e991522ca7e64e$var$startMessage","$09e991522ca7e64e$var$loseMessage","$09e991522ca7e64e$var$winMessage","$09e991522ca7e64e$var$updateGameState","innerHTML","tr","createElement","td","textContent","className","appendChild","$09e991522ca7e64e$var$checkGameStatus","$09e991522ca7e64e$var$hideMessages","gameStatus","classList","remove","add","addEventListener","isStarting","contains","toggle","e","moves","ArrowRight","ArrowLeft","ArrowUp","ArrowDown","key","$09e991522ca7e64e$var$touchStartX","$09e991522ca7e64e$var$touchStartY","touches","clientX","clientY","touchEndX","changedTouches","touchEndY","diffX","diffY","abs"],"version":3,"file":"index.e6d02754.js.map"}